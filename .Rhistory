y = Poverty_Rate,
fill = Name)) +
# Create bars with semi-transparency
geom_bar(stat = "identity", width = 0.7, alpha = 0.8) +
# Add confidence interval error bars
geom_errorbar(aes(ymin = CI_Lower,
ymax = CI_Upper),
width = 0.2) +
# Add data labels with confidence intervals
geom_text(aes(label = sprintf("%.1f%%\n(CI: %.1f%% - %.1f%%)",
Poverty_Rate, CI_Lower, CI_Upper)),
position = position_dodge(width = 0.9),
vjust = -0.5) +
# Apply minimal theme for clean look
theme_minimal() +
theme(
legend.position = "none",
plot.title = element_text(size = 12, face = "bold"),
plot.subtitle = element_text(size = 10)
) +
# Add informative labels
labs(
title = "Child Poverty Rates (Ages 0-17) Comparison",
subtitle = sprintf("Difference: %.1f percentage points", abs(diff_rate)),
x = "State",
y = "Poverty Percentage (%)",
caption = "Error bars represent 90% confidence intervals"
) +
# Set custom colors for states
scale_fill_manual(values = c("California" = "skyblue", "Texas" = "lightgreen"))
# Save visualization to the data directory
viz_path <- file.path(data_dir, "poverty_comparison.png")
ggsave(viz_path, plot, width = 10, height = 7, dpi = 300)
print(paste("Visualization saved to:", viz_path))
# Step 6: Print Results
print("\n=== KEY FINDINGS ===")
print(paste("1. California poverty rate:",
round(stats_summary$Poverty_Rate[1], 1), "%"))
print(paste("   Confidence Interval:",
round(stats_summary$CI_Lower[1], 1), "% -",
round(stats_summary$CI_Upper[1], 1), "%"))
print(paste("2. Texas poverty rate:",
round(stats_summary$Poverty_Rate[2], 1), "%"))
print(paste("   Confidence Interval:",
round(stats_summary$CI_Lower[2], 1), "% -",
round(stats_summary$CI_Upper[2], 1), "%"))
print(paste("3. Difference between states:",
round(abs(diff_rate), 1), "percentage points"))
# Step 7: Statistical Conclusion
print("\n=== CONCLUSION ===")
if (!ci_overlap) {
print("Decision: There is significant evidence of a difference between states")
print(paste("Texas has a", round(abs(diff_rate), 1),
"percentage point higher poverty rate"))
} else {
print("Decision: Insufficient evidence to conclude a significant difference")
print("The confidence intervals overlap")
}
# Step 8: Save Analysis Log
log_path <- file.path(data_dir, "analysis_log.txt")
sink(log_path)
print("=== ANALYSIS LOG ===")
print(paste("Analysis completed:", Sys.time()))
print(paste("Data file used:", data_path))
print(paste("Visualization saved:", viz_path))
sink()
# Load required libraries for data analysis and visualization
library(dplyr)
library(ggplot2)
library(knitr)
library(tidyr)  # For data cleaning
library(stringr) # For string manipulation
# Set working directory and file paths
# Data file path (exact path as provided)
data_path <- "H:/assisgnment/hertfordshire assignment/Basha Team/team 81 link/Dataset/est13_16us/est16us.csv"
# Extract directory paths from the full path
main_dir <- dirname(dirname(dirname(data_path)))
data_dir <- dirname(data_path)
# Step 1: Analysis Framework
print("=== ANALYSIS FRAMEWORK ===")
print("Research Question: Is there a difference in the mean poverty percentage for children ages 0-17 between California and Texas?")
print("\nHypotheses:")
print("H0: No difference in mean poverty percentage between states")
print("H1: There is a difference in mean poverty percentage between states")
# Step 2: Data Loading and Initial Cleaning
print("\n=== DATA LOADING AND CLEANING ===")
# Function to load and validate data
load_poverty_data <- function(file_path) {
# Check if file exists
if (!file.exists(file_path)) {
stop("Data file not found at: ", file_path)
}
# Read CSV file
tryCatch({
raw_data <- read.csv(file_path, stringsAsFactors = FALSE)
print(paste("Data loaded successfully from:", file_path))
return(raw_data)
}, error = function(e) {
stop("Error reading CSV file: ", e$message)
})
}
# Load raw data
raw_data <- load_poverty_data(data_path)
# Print initial data summary
print("\nInitial Data Summary:")
print(str(raw_data))
# Step 3: Data Cleaning and Preprocessing
print("\n=== DATA CLEANING ===")
clean_poverty_data <- function(data) {
cleaned <- data %>%
# Remove header rows and summary rows
filter(!is.na(Geographic.Information),
Geographic.Information != "State FIPS Code",
Geographic.Information != "United States") %>%
# Select and rename relevant columns
select(
State = Geographic.Information,
Name = Unnamed..2,
Poverty_Rate = Age.0.17,
CI_Lower = Unnamed..10,
CI_Upper = Unnamed..11
) %>%
# Clean percentage values
mutate(
across(c(Poverty_Rate, CI_Lower, CI_Upper),
~as.numeric(gsub("[%,]", "", .)),
.names = "{col}")
) %>%
# Remove any remaining special characters
mutate(
across(where(is.character), ~str_trim(str_replace_all(., "[^[:alnum:] ]", "")))
) %>%
# Handle missing values
na.omit()
return(cleaned)
}
# Clean the data
cleaned_data <- clean_poverty_data(raw_data)
# Print cleaning summary
print("\nCleaning Summary:")
print(paste("Original rows:", nrow(raw_data)))
print(paste("Cleaned rows:", nrow(cleaned_data)))
print(paste("Removed rows:", nrow(raw_data) - nrow(cleaned_data)))
# Step 4: Statistical Analysis
print("\n=== STATISTICAL ANALYSIS ===")
# Select data for California and Texas
comparison_data <- cleaned_data %>%
filter(Name %in% c("California", "Texas"))
# Verify data for both states
if(nrow(comparison_data) != 2) {
stop("Missing data for one or both states")
}
# Calculate statistics
stats_summary <- comparison_data %>%
group_by(Name) %>%
summarise(
Poverty_Rate = mean(Poverty_Rate, na.rm = TRUE),
CI_Lower = mean(CI_Lower, na.rm = TRUE),
CI_Upper = mean(CI_Upper, na.rm = TRUE),
.groups = "drop"
)
# Print summary statistics
print("\nState-wise Statistics:")
print(kable(stats_summary, digits = 2))
# Calculate difference between states
diff_rate <- stats_summary$Poverty_Rate[stats_summary$Name == "Texas"] -
stats_summary$Poverty_Rate[stats_summary$Name == "California"]
# Check for confidence interval overlap
ci_overlap <- !(min(stats_summary$CI_Upper) < max(stats_summary$CI_Lower))
# Step 5: Create Visualization
print("\n=== CREATING VISUALIZATION ===")
plot <- ggplot(stats_summary,
aes(x = Name,
y = Poverty_Rate,
fill = Name)) +
# Create bars with semi-transparency
geom_bar(stat = "identity", width = 0.7, alpha = 0.8) +
# Add confidence interval error bars
geom_errorbar(aes(ymin = CI_Lower,
ymax = CI_Upper),
width = 0.2) +
# Add data labels with confidence intervals
geom_text(aes(label = sprintf("%.1f%%\n(CI: %.1f%% - %.1f%%)",
Poverty_Rate, CI_Lower, CI_Upper)),
position = position_dodge(width = 0.9),
vjust = -0.5) +
# Apply minimal theme for clean look
theme_minimal() +
theme(
legend.position = "none",
plot.title = element_text(size = 12, face = "bold"),
plot.subtitle = element_text(size = 10)
) +
# Add informative labels
labs(
title = "Child Poverty Rates (Ages 0-17) Comparison",
subtitle = sprintf("Difference: %.1f percentage points", abs(diff_rate)),
x = "State",
y = "Poverty Percentage (%)",
caption = "Error bars represent 90% confidence intervals"
) +
# Set custom colors for states
scale_fill_manual(values = c("California" = "skyblue", "Texas" = "lightgreen"))
# Save visualization to the data directory
viz_path <- file.path(data_dir, "poverty_comparison.png")
ggsave(viz_path, plot, width = 10, height = 7, dpi = 300)
print(paste("Visualization saved to:", viz_path))
# Step 6: Print Results
print("\n=== KEY FINDINGS ===")
print(paste("1. California poverty rate:",
round(stats_summary$Poverty_Rate[1], 1), "%"))
print(paste("   Confidence Interval:",
round(stats_summary$CI_Lower[1], 1), "% -",
round(stats_summary$CI_Upper[1], 1), "%"))
print(paste("2. Texas poverty rate:",
round(stats_summary$Poverty_Rate[2], 1), "%"))
print(paste("   Confidence Interval:",
round(stats_summary$CI_Lower[2], 1), "% -",
round(stats_summary$CI_Upper[2], 1), "%"))
print(paste("3. Difference between states:",
round(abs(diff_rate), 1), "percentage points"))
# Step 7: Statistical Conclusion
print("\n=== CONCLUSION ===")
if (!ci_overlap) {
print("Decision: There is significant evidence of a difference between states")
print(paste("Texas has a", round(abs(diff_rate), 1),
"percentage point higher poverty rate"))
} else {
print("Decision: Insufficient evidence to conclude a significant difference")
print("The confidence intervals overlap")
}
# Step 8: Save Analysis Log
log_path <- file.path(data_dir, "analysis_log.txt")
sink(log_path)
print("=== ANALYSIS LOG ===")
print(paste("Analysis completed:", Sys.time()))
print(paste("Data file used:", data_path))
print(paste("Visualization saved:", viz_path))
sink()
# Data Normality Analysis
# Data for California and Texas poverty rates
data <- c(19.9, 22.4)  # Example data
# Histogram for distribution
hist(data,
main="పిల్లల పేదరికం రేట్ల హిస్టోగ్రామ్",
xlab="పేదరికం రేటు (%)",
col="lightblue",
border="black",
probability=TRUE)
# Normal Distribution Line
lines(density(data), col="red")
# Q-Q Plot for checking normality
qqnorm(data, main="పిల్లల పేదరికం రేట్ల Q-Q ప్లాట్")
qqline(data, col="red")
# Shapiro-Wilk Test for Normality
shapiro_test_result <- shapiro.test(data)
# Load required libraries for data analysis and visualization
library(dplyr)
library(ggplot2)
library(knitr)
library(tidyr)  # For data cleaning
library(stringr) # For string manipulation
# Set working directory and file paths
# Data file path (exact path as provided)
data_path <- "H:/assisgnment/hertfordshire assignment/Basha Team/team 81 link/Dataset/est13_16us/est16us.csv"
# Extract directory paths from the full path
main_dir <- dirname(dirname(dirname(data_path)))
data_dir <- dirname(data_path)
# Step 1: Analysis Framework
print("=== ANALYSIS FRAMEWORK ===")
print("Research Question: Is there a difference in the mean poverty percentage for children ages 0-17 between California and Texas?")
print("\nHypotheses:")
print("H0: No difference in mean poverty percentage between states")
print("H1: There is a difference in mean poverty percentage between states")
# Step 2: Data Loading and Initial Cleaning
print("\n=== DATA LOADING AND CLEANING ===")
# Function to load and validate data
load_poverty_data <- function(file_path) {
# Check if file exists
if (!file.exists(file_path)) {
stop("Data file not found at: ", file_path)
}
# Read CSV file
tryCatch({
raw_data <- read.csv(file_path, stringsAsFactors = FALSE)
print(paste("Data loaded successfully from:", file_path))
return(raw_data)
}, error = function(e) {
stop("Error reading CSV file: ", e$message)
})
}
# Load raw data
raw_data <- load_poverty_data(data_path)
# Print initial data summary
print("\nInitial Data Summary:")
print(str(raw_data))
# Step 3: Data Cleaning and Preprocessing
print("\n=== DATA CLEANING ===")
clean_poverty_data <- function(data) {
cleaned <- data %>%
# Remove header rows and summary rows
filter(!is.na(Geographic.Information),
Geographic.Information != "State FIPS Code",
Geographic.Information != "United States") %>%
# Select and rename relevant columns
select(
State = Geographic.Information,
Name = Unnamed..2,
Poverty_Rate = Age.0.17,
CI_Lower = Unnamed..10,
CI_Upper = Unnamed..11
) %>%
# Clean percentage values
mutate(
across(c(Poverty_Rate, CI_Lower, CI_Upper),
~as.numeric(gsub("[%,]", "", .)),
.names = "{col}")
) %>%
# Remove any remaining special characters
mutate(
across(where(is.character), ~str_trim(str_replace_all(., "[^[:alnum:] ]", "")))
) %>%
# Handle missing values
na.omit()
return(cleaned)
}
# Clean the data
cleaned_data <- clean_poverty_data(raw_data)
# Print cleaning summary
print("\nCleaning Summary:")
print(paste("Original rows:", nrow(raw_data)))
print(paste("Cleaned rows:", nrow(cleaned_data)))
print(paste("Removed rows:", nrow(raw_data) - nrow(cleaned_data)))
# Step 4: Statistical Analysis
print("\n=== STATISTICAL ANALYSIS ===")
# Select data for California and Texas
comparison_data <- cleaned_data %>%
filter(Name %in% c("California", "Texas"))
# Verify data for both states
if(nrow(comparison_data) != 2) {
stop("Missing data for one or both states")
}
# Calculate statistics
stats_summary <- comparison_data %>%
group_by(Name) %>%
summarise(
Poverty_Rate = mean(Poverty_Rate, na.rm = TRUE),
CI_Lower = mean(CI_Lower, na.rm = TRUE),
CI_Upper = mean(CI_Upper, na.rm = TRUE),
.groups = "drop"
)
# Print summary statistics
print("\nState-wise Statistics:")
print(kable(stats_summary, digits = 2))
# Calculate difference between states
diff_rate <- stats_summary$Poverty_Rate[stats_summary$Name == "Texas"] -
stats_summary$Poverty_Rate[stats_summary$Name == "California"]
# Check for confidence interval overlap
ci_overlap <- !(min(stats_summary$CI_Upper) < max(stats_summary$CI_Lower))
# Step 5: Create Visualization
print("\n=== CREATING VISUALIZATION ===")
plot <- ggplot(stats_summary,
aes(x = Name,
y = Poverty_Rate,
fill = Name)) +
# Create bars with semi-transparency
geom_bar(stat = "identity", width = 0.7, alpha = 0.8) +
# Add confidence interval error bars
geom_errorbar(aes(ymin = CI_Lower,
ymax = CI_Upper),
width = 0.2) +
# Add data labels with confidence intervals
geom_text(aes(label = sprintf("%.1f%%\n(CI: %.1f%% - %.1f%%)",
Poverty_Rate, CI_Lower, CI_Upper)),
position = position_dodge(width = 0.9),
vjust = -0.5) +
# Apply minimal theme for clean look
theme_minimal() +
theme(
legend.position = "none",
plot.title = element_text(size = 12, face = "bold"),
plot.subtitle = element_text(size = 10)
) +
# Add informative labels
labs(
title = "Child Poverty Rates (Ages 0-17) Comparison",
subtitle = sprintf("Difference: %.1f percentage points", abs(diff_rate)),
x = "State",
y = "Poverty Percentage (%)",
caption = "Error bars represent 90% confidence intervals"
) +
# Set custom colors for states
scale_fill_manual(values = c("California" = "skyblue", "Texas" = "lightgreen"))
# Save visualization to the data directory
viz_path <- file.path(data_dir, "poverty_comparison.png")
ggsave(viz_path, plot, width = 10, height = 7, dpi = 300)
print(paste("Visualization saved to:", viz_path))
# Step 6: Print Results
print("\n=== KEY FINDINGS ===")
print(paste("1. California poverty rate:",
round(stats_summary$Poverty_Rate[1], 1), "%"))
print(paste("   Confidence Interval:",
round(stats_summary$CI_Lower[1], 1), "% -",
round(stats_summary$CI_Upper[1], 1), "%"))
print(paste("2. Texas poverty rate:",
round(stats_summary$Poverty_Rate[2], 1), "%"))
print(paste("   Confidence Interval:",
round(stats_summary$CI_Lower[2], 1), "% -",
round(stats_summary$CI_Upper[2], 1), "%"))
print(paste("3. Difference between states:",
round(abs(diff_rate), 1), "percentage points"))
# Step 7: Statistical Conclusion
print("\n=== CONCLUSION ===")
if (!ci_overlap) {
print("Decision: There is significant evidence of a difference between states")
print(paste("Texas has a", round(abs(diff_rate), 1),
"percentage point higher poverty rate"))
} else {
print("Decision: Insufficient evidence to conclude a significant difference")
print("The confidence intervals overlap")
}
# Step 8: Save Analysis Log
log_path <- file.path(data_dir, "analysis_log.txt")
sink(log_path)
print("=== ANALYSIS LOG ===")
print(paste("Analysis completed:", Sys.time()))
print(paste("Data file used:", data_path))
print(paste("Visualization saved:", viz_path))
sink()
# Data Normality Analysis
# Data for California and Texas poverty rates (You must use valid data with at least 3 points)
data <- c(19.9, 22.4)  # Example data for illustration (must have more data points for normality tests)
# Histogram for distribution
hist(data,
main="Child Poverty Rates Histogram",
xlab="Poverty Rate (%)",
col="lightblue",
border="black",
probability=TRUE)
# Normal Distribution Line
lines(density(data), col="red")
# Q-Q Plot for checking normality
qqnorm(data, main="Q-Q Plot for Poverty Rates")
qqline(data, col="red")
# Shapiro-Wilk Test for Normality (Only if sample size is sufficient)
if (length(data) > 2) {
shapiro_test_result <- shapiro.test(data)
print(paste("Shapiro-Wilk Test p-value:", shapiro_test_result$p.value))
} else {
print("Shapiro-Wilk test not applicable due to small sample size.")
}
# Load required libraries
library(ggplot2)
library(dplyr)
# Set file path (update this path to your actual file location)
data_path <- "H:/assisgnment/hertfordshire assignment/Basha Team/team 81 link/Dataset/est13_16us/est16us.csv"
# Load and clean the dataset
raw_data <- read.csv(data_path, stringsAsFactors = FALSE)
# Clean the data
cleaned_data <- raw_data %>%
filter(
!is.na(Geographic.Information),
Geographic.Information != "State FIPS Code",
Geographic.Information != "United States"
) %>%
select(
State = Geographic.Information,
Name = Unnamed..2,
Poverty_Rate = Age.0.17
) %>%
mutate(
Poverty_Rate = as.numeric(gsub("[%,]", "", Poverty_Rate))
) %>%
na.omit()
# Extract data for California and Texas
comparison_data <- cleaned_data %>%
filter(Name %in% c("California", "Texas")) %>%
group_by(Name) %>%
summarize(
Poverty_Rate = list(Poverty_Rate)
) %>%
tidyr::unnest(cols = c(Poverty_Rate))
# Separate California and Texas data
california <- comparison_data %>%
filter(Name == "California") %>%
pull(Poverty_Rate)
texas <- comparison_data %>%
filter(Name == "Texas") %>%
pull(Poverty_Rate)
# Histogram with normal curve overlay
histogram_plot <- ggplot(comparison_data, aes(x = Poverty_Rate, fill = Name)) +
geom_histogram(aes(y = ..density..), position = "identity", alpha = 0.6, bins = 10) +
geom_density(aes(color = Name), size = 1) +
labs(
title = "Histogram with Normal Curve Overlay",
x = "Poverty Rate (%)",
y = "Density"
) +
theme_minimal()
# Save the histogram to a file
image_path <- "H:/poverty_histogram_with_normal_curve.png"
ggsave(image_path, plot = histogram_plot, width = 8, height = 6, dpi = 300)
# Perform Mann-Whitney U Test
test_result <- wilcox.test(
california, texas,
alternative = "two.sided",
exact = FALSE
)
# Print test result
print(test_result)
# Print the path where the image is saved
print(paste("Histogram saved at:", image_path))
